*vsnip* *vim-vsnip*

(v)scode (snip)pet

The plugin aims to VSCode's snippet feature.



==============================================================================
CONTENTS                                                      *vsnip-contents*

INTRODUCTION                                                     |vsnip-intro|
INSTALL                                                        |vsnip-install|
MAPPING                                                        |vsnip-mapping|
COMMAND                                                        |vsnip-command|
VARIABLE                                                      |vsnip-variable|
FUNCTION                                                      |vsnip-function|
EXAMPLE                                                        |vsnip-example|
TODO                                                              |vsnip-todo|
CHANGELOG                                                    |vsnip-changelog|



==============================================================================
INTRODUCTION                                                     *vsnip-intro*

`vsnip` is snippet plugin that aims to Visual Studio Code's snippet feature.

Currently implementations are not supported features below.

- variable/placeholder transform.
- nested placeholder.
- multiline changes in placeholder.



==============================================================================
INSTALL                                                        *vsnip-install*

>
  call dein#add('hrsh7th/vim-vsnip')

  or

  Plug 'hrsh7th/vim-vsnip'
<

Can use any plugin managers to install.



==============================================================================
MAPPING                                                        *vsnip-mapping*

>
  inoremap <silent> <Plug>(vsnip-expand-or-jump) <Esc>:<C-u>call vsnip#expand_or_jump()<CR>
  snoremap <silent> <Plug>(vsnip-expand-or-jump) <Esc>:<C-u>call vsnip#expand_or_jump()<CR>
<

You should use above mappings like below.

>
  imap <expr><Tab> vsnip#expandable_or_jumpable() ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
  smap <expr><Tab> vsnip#expandable_or_jumpable() ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
<



==============================================================================
COMMAND                                                        *vsnip-command*

>
  :VsnipEdit
<
  Edit snippet for current filetype.


>
  :VsnipSelect
<
  Select text for snippet expansion, it supports visual selection.
  If omit visual selection, vsnip selects `<cword>`.



==============================================================================
VARIABLE                                                         *vsnip-usage*

>
  g:vsnip_snippet_dirs (string[])
<
    Default: ['/path/to/default-snippet-dir']

    Specify snippets dir.


>
  g:vsnip_sync_delay (number)
<
    Default: 100

    Milliseconds to delay of sync same placeholder.


>
  g:vsnip_namespace (string)
<
    Default: 'snip_'

    This value will be prepend to all prefixes.
    Will be useful to auto-completion.



==============================================================================
FUNCTION                                                      *vsnip-function*

!!! It's not stable interfaces. !!!

>
  vsnip#select(text) -> ()
<
    Select specified text. It uses in expanding snippet.
    See https://code.visualstudio.com/docs/editor/userdefinedsnippets.


>
  vsnip#expandable() -> (v:true | v:false)
<
    Check expandable in current cursor position.


>
  vsnip#jumpable() -> (v:true | v:false)
<
    Check jumpable in current cursor position.


>
  vsnip#expandable_or_jumpable() -> (v:true | v:false)
<
    Check jumpable in current cursor position.


>
  vsnip#expand_or_jump() -> ()
<
    Invoke expand or jump (prefer expand).



==============================================================================
EXAMPLE                                                        *vsnip-example*

>
  let g:vsnip_snippets_dirs = [expand('~/.vsnip')]
  imap <expr><Tab> vsnip#expandable_or_jumpable() ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
  smap <expr><Tab> vsnip#expandable_or_jumpable() ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
<



==============================================================================
TODO                                                              *vsnip-todo*

- easy snippet creation.
- multibytes support.
- regex for variable/placeholder.
- performance up.



==============================================================================
CHANGELOG                                                    *vsnip-changelog*

2019/09/02
- Add `g:vsnip_namespace`
- Add `g:vsnip_sync_delay`
- Update README.md
- Initial release


